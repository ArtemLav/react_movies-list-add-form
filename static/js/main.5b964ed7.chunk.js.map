{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/TextInput/TextInput.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TextInput","React","memo","name","value","label","placeholder","hasError","errorText","onChange","onBlur","htmlFor","type","id","autoComplete","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","onInputChange","e","target","setState","validateTextInput","validateUrlInput","match","onFormSubmit","preventDefault","addMovie","props","this","onSubmit","disabled","PureComponent","App","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b964ed7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TextInput = React.memo(({\n  name,\n  value,\n  label,\n  placeholder,\n  hasError,\n  errorText,\n  onChange,\n  onBlur,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type=\"text\"\n        id={name}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        className=\"form-control\"\n        onChange={onChange}\n        onBlur={onBlur}\n        autoComplete=\"off\"\n      />\n      {hasError && (\n        <p className=\"text-danger\">\n          {errorText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  hasError: PropTypes.bool,\n  errorText: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n};\n\nTextInput.defaultProps = {\n  hasError: false,\n  errorText: '',\n  onBlur: () => {},\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from './TextInput';\n\nexport class NewMovie extends PureComponent {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  onInputChange = (e) => {\n    const { value, name } = e.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: false,\n    });\n  }\n\n  validateTextInput = (e) => {\n    const { name } = e.target;\n\n    if (this.state[name]) {\n      this.setState({\n        [`${name}Error`]: false,\n      });\n    } else {\n      this.setState({\n        [`${name}Error`]: true,\n      });\n    }\n  }\n\n  validateUrlInput = (e) => {\n    const { name } = e.target;\n    // eslint-disable-next-line max-len\n    const validUrlRegex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (this.state[name].match(validUrlRegex)) {\n      this.setState({\n        [`${name}Error`]: false,\n      });\n    } else {\n      this.setState({\n        [`${name}Error`]: true,\n      });\n    }\n  }\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const { addMovie } = this.props;\n    const {\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    if (titleError || imgUrlError || imdbUrlError || imdbIdError) {\n      return;\n    }\n\n    addMovie(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n    const {\n      onInputChange,\n      onFormSubmit,\n      validateTextInput,\n      validateUrlInput,\n    } = this;\n\n    return (\n      <form onSubmit={onFormSubmit}>\n        <h2 className=\"h2 text-center mb-5\">Add New Movie</h2>\n\n        <TextInput\n          name=\"title\"\n          value={title}\n          label=\"Movie title\"\n          placeholder=\"Title\"\n          hasError={titleError}\n          errorText=\"Please enter movie Title\"\n          onChange={onInputChange}\n          onBlur={validateTextInput}\n        />\n\n        <TextInput\n          name=\"description\"\n          value={description}\n          label=\"Write short description for movie\"\n          placeholder=\"Description\"\n          onChange={onInputChange}\n        />\n\n        <TextInput\n          name=\"imgUrl\"\n          value={imgUrl}\n          label=\"Add image for movie\"\n          placeholder=\"imgUrl\"\n          hasError={imgUrlError}\n          errorText=\"Please enter valid image Url\"\n          onChange={onInputChange}\n          onBlur={validateUrlInput}\n        />\n\n        <TextInput\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          label=\"Add link of movie page on IMDB\"\n          placeholder=\"imdbUrl\"\n          hasError={imdbUrlError}\n          errorText=\"Please enter valid IMDB link\"\n          onChange={onInputChange}\n          onBlur={validateUrlInput}\n        />\n\n        <TextInput\n          name=\"imdbId\"\n          value={imdbId}\n          label=\"Add movie id on IMDB\"\n          placeholder=\"imdbId\"\n          hasError={imdbIdError}\n          errorText=\"Please enter IMDB id of movie\"\n          onChange={onInputChange}\n          onBlur={validateTextInput}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-success mt-3 float-right\"\n          disabled={!title || !imgUrl || !imdbUrl || !imdbId}\n        >\n          Add New Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { addMovie } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}